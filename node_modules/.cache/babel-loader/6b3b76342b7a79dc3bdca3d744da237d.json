{"ast":null,"code":"var _jsxFileName = \"E:\\\\Treasure Hunt\\\\src\\\\Puzzle.js\";\nimport React, { useState } from 'react';\n\nconst Puzzle = () => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showSolution, setShowSolution] = useState(false);\n  const [saveMessage, setSaveMessage] = useState('');\n  const questions = [{\n    question: 'If AIRLINE is written as ENILRIA7, then RAILWAY will be written as -',\n    options: ['YAWLIAR7', 'YAWLIAR8', 'YAWILAR7', 'YAWILAR8'],\n    correctAnswer: 'YAWLIAR7'\n  }, {\n    question: 'Which continent is home to the largest rainforest in the world?',\n    options: ['Africa', 'South America', 'Asia', 'North America'],\n    correctAnswer: 'South America'\n  }, {\n    question: 'What is the currency of Japan?',\n    options: ['Yen', 'Euro', 'Dollar', 'Pound'],\n    correctAnswer: 'Yen'\n  }, {\n    question: 'In a group of five person A, B, C, D and E one plays Tennis, one plays Chess and one Hockey. A and D are unmarried women andÂ· play no game. There is a couple among them where E is husband of C. No women plays either Chess or Hockey. B is the brother of C and he neither plays Tennis nor Chess. Who plays Hockey here?',\n    options: ['A', 'B', ' Charles Dickens', ' Mark Twain'],\n    correctAnswer: 'William ShakAespeare'\n  }, {\n    question: 'What will be the next number in the series 13, 17, 19, 23, 29, .......?',\n    options: ['31', '33', '35', '37'],\n    correctAnswer: '31'\n  }, {\n    question: 'Who is CEO of Tesla?',\n    options: ['Jeff Bezos', 'Elon Musk', 'Bill Gates', 'Tony Stark'],\n    correctAnswer: 'Elon Musk'\n  } // Add more questions as needed\n  ];\n\n  const handleAnswerSubmit = selectedOption => {\n    const currentQuestion = questions[currentStep];\n\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 1);\n      setCurrentStep(currentStep + 1);\n    } else {\n      // Handle incorrect answer (dead-end)\n      setShowSolution(true);\n    }\n  };\n\n  const saveScore = () => {\n    // Implement your code to save the score in the database\n    // You'll need to make a request to your backend server and handle the database operations\n    // Example code:\n    fetch('/api/scores', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        score\n      })\n    }).then(response => response.json()).then(data => {\n      // Handle the response from the server\n      console.log('Score saved:', data);\n      setSaveMessage('Score saved successfully!');\n    }).catch(error => {\n      // Handle any error that occurred during the request\n      console.error('Error saving score:', error);\n      setSaveMessage('Failed to save score.');\n    });\n  };\n\n  const showPuzzle = () => {\n    if (showSolution) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Game Over!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"Your score: \", score, \" / \", questions.length), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: saveScore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, saveMessage));\n    }\n\n    if (currentStep >= questions.length) {\n      if (score === questions.length) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, \"Congratulations!\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }, \"You answered all questions correctly!\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: saveScore,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, \"Save\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, saveMessage));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        }, \"Game Over!\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, \"Your score: \", score, \" / \", questions.length), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: saveScore,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, \"Save\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, saveMessage));\n      }\n    }\n\n    const currentQuestion = questions[currentStep];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Question \", currentStep + 1), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, currentQuestion.question), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, currentQuestion.options.map(option => /*#__PURE__*/React.createElement(\"li\", {\n      key: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleAnswerSubmit(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, option)))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Puzzle\"), showPuzzle());\n};\n\nexport default Puzzle;","map":{"version":3,"sources":["E:/Treasure Hunt/src/Puzzle.js"],"names":["React","useState","Puzzle","currentStep","setCurrentStep","score","setScore","showSolution","setShowSolution","saveMessage","setSaveMessage","questions","question","options","correctAnswer","handleAnswerSubmit","selectedOption","currentQuestion","saveScore","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","showPuzzle","length","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Puzzle = () => {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showSolution, setShowSolution] = useState(false);\r\n  const [saveMessage, setSaveMessage] = useState('');\r\n\r\n  const questions = [\r\n    {\r\n      question: 'If AIRLINE is written as ENILRIA7, then RAILWAY will be written as -',\r\n      options: ['YAWLIAR7', 'YAWLIAR8', 'YAWILAR7', 'YAWILAR8'],\r\n      correctAnswer: 'YAWLIAR7'\r\n    },\r\n    {\r\n      question: 'Which continent is home to the largest rainforest in the world?',\r\n      options: ['Africa', 'South America', 'Asia', 'North America'],\r\n      correctAnswer: 'South America'\r\n    },\r\n    {\r\n      question: 'What is the currency of Japan?',\r\n      options: ['Yen', 'Euro', 'Dollar', 'Pound'],\r\n      correctAnswer: 'Yen'\r\n    },\r\n    {\r\n      question: 'In a group of five person A, B, C, D and E one plays Tennis, one plays Chess and one Hockey. A and D are unmarried women andÂ· play no game. There is a couple among them where E is husband of C. No women plays either Chess or Hockey. B is the brother of C and he neither plays Tennis nor Chess. Who plays Hockey here?',\r\n      options: ['A', 'B', ' Charles Dickens', ' Mark Twain'],\r\n      correctAnswer: 'William ShakAespeare'\r\n    },\r\n    {\r\n      question: 'What will be the next number in the series 13, 17, 19, 23, 29, .......?',\r\n      options: ['31', '33', '35', '37'],\r\n      correctAnswer: '31'\r\n    },\r\n    {\r\n      question: 'Who is CEO of Tesla?',\r\n      options: ['Jeff Bezos', 'Elon Musk', 'Bill Gates', 'Tony Stark'],\r\n      correctAnswer: 'Elon Musk'\r\n    }\r\n    // Add more questions as needed\r\n  ];\r\n\r\n  const handleAnswerSubmit = (selectedOption) => {\r\n    const currentQuestion = questions[currentStep];\r\n    if (selectedOption === currentQuestion.correctAnswer) {\r\n      setScore(score + 1);\r\n      setCurrentStep(currentStep + 1);\r\n    } else {\r\n      // Handle incorrect answer (dead-end)\r\n      setShowSolution(true);\r\n    }\r\n  };\r\n\r\n  const saveScore = () => {\r\n    // Implement your code to save the score in the database\r\n    // You'll need to make a request to your backend server and handle the database operations\r\n    // Example code:\r\n    fetch('/api/scores', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ score })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle the response from the server\r\n        console.log('Score saved:', data);\r\n        setSaveMessage('Score saved successfully!');\r\n      })\r\n      .catch((error) => {\r\n        // Handle any error that occurred during the request\r\n        console.error('Error saving score:', error);\r\n        setSaveMessage('Failed to save score.');\r\n      });\r\n  };\r\n\r\n  const showPuzzle = () => {\r\n    if (showSolution) {\r\n      return (\r\n        <div>\r\n          <h2>Game Over!</h2>\r\n          <p>Your score: {score} / {questions.length}</p>\r\n          <button onClick={saveScore}>Save</button>\r\n          <p>{saveMessage}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (currentStep >= questions.length) {\r\n      if (score === questions.length) {\r\n        return (\r\n          <div>\r\n            <h2>Congratulations!</h2>\r\n            <p>You answered all questions correctly!</p>\r\n            <button onClick={saveScore}>Save</button>\r\n            <p>{saveMessage}</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <h2>Game Over!</h2>\r\n            <p>Your score: {score} / {questions.length}</p>\r\n            <button onClick={saveScore}>Save</button>\r\n            <p>{saveMessage}</p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    const currentQuestion = questions[currentStep];\r\n\r\n    return (\r\n      <div>\r\n        <h2>Question {currentStep + 1}</h2>\r\n        <p>{currentQuestion.question}</p>\r\n        <ul>\r\n          {currentQuestion.options.map((option) => (\r\n            <li key={option}>\r\n              <button onClick={() => handleAnswerSubmit(option)}>{option}</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Puzzle</h1>\r\n      {showPuzzle()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Puzzle;\r\n"]},"metadata":{},"sourceType":"module"}